set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:RGB"
set-window-option -g mode-keys vi
set -sg escape-time 0

set -g mouse on
set -g focus-events on

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind r source-file ~/dotfiles/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Smart pane switching with awareness of Vim splits.
# Based on https://github.com/christoomey/vim-tmux-navigator and https://www.bugsnag.com/blog/tmux-and-vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n 'C-\' if-shell "$is_vim" 'send-keys C-\\'  'select-pane -l'

bind j resize-pane -D 5
bind k resize-pane -U 5
bind h resize-pane -L 5
bind l resize-pane -R 5

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# create or attach to a session for a (Desmos) project
bind -n M-n display-popup -E -T "Go to project" "ta ~/c/desmosinc"

# choose among open sessions/windows/panes
bind p run-shell -b tmux-choose-session-fzf
bind -n M-p run-shell -b tmux-choose-session-fzf

# next/previous session
bind M-] switch-client -p
bind M-[ switch-client -n
bind m switch-client -l

# next/previous window
bind -n M-[ previous-window
bind -n M-] next-window

# Open new splits/windows in current directory https://stackoverflow.com/questions/44936396/different-starting-directory-per-window
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# TODO
# - unified command + arrow for resizing tmux panes / vim splits
# - make arrow key navigation across words work (option+arrow jumps words)
